name: Testworkflow_CI
on:
  push:
    branches:
      - dev
      - feature
      - main
  pull_request:
  release:
    types: [published, unpublished, created, edited, deleted, prereleased]     
jobs:
  checkout_and_install:
    strategy:
      matrix:
        node: ["12.22.1"]        
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Installing nyc
        run: npm install nyc --save-dev
  lint:
    needs: checkout_and_install
    runs-on: ubuntu-latest
    steps:
      - name: Installing node_modules
        run: npm install eslint --global
      - name: Install Yarn
        run: npm install -g yarn
      - name: Run lint
        run: yarn run eslint --init  
  build_and_test:
    needs: 
      - checkout_and_install      
    runs-on: ubuntu-latest
    steps:      
      - name: npm build, and test
        run: |
          npm run build --if-present
          npm test 
  duplicate_code_detection:
    name: Check for duplicate code
    needs: 
      - build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Install jsinspect
        run: npm install -g jsinspect	
      - name: Run the jsinspect
        run: jsinspect --ignore "test" "."   
  sonar_scan:
    name: Detect bugs, vulnerabilities and code smells
    needs:
      - build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
