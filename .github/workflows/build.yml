name: CI
on:
  push:
    branches:
      - dev
      - feature
      - ktchethan-patch-1
  pull_request:
  release:
    types:
      - staging
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  checkout_and_install:
    strategy:
      matrix:
         node: ["15.14.0"]        
        #node: ["12.22.1", "14.16.1", "15.14.0", "16.1.0"]        
    runs-on: ubuntu-latest    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}          
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci      
      - name: Installing nyc Istanbul
        run: npm install nyc --save-dev
      - name: npm build, and test
        run: |
          npm run build --if-present
          npm test              
      - name: Installing node_modules
        run: npm install eslint --global
      - name: Install Yarn
        run: npm install -g yarn
      - name: Run lint
        run: yarn run eslint --init
      - name: Installing coverage
        run: npm install check-code-coverage            
      - name: Upload coverage to Codecov
        # finally run the tests
        run: npm test      
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload coverage to Codecov 
        uses: codecov/codecov-action@v1
      - name: Check for duplicate code
        uses: platisd/duplicate-code-detection-tool@master
        with:
          directories: "test/"
          # Only examine .h and .cpp files
          file_extensions: "sh, js"
          # Only report similarities above 5%
          ignore_below: 5
          # If a file is more than 70% similar to another, then the job fails
          fail_above: 70
          # If a file is more than 15% similar to another, show a warning symbol in the report
          warn_above: 15
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
